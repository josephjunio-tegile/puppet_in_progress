=begin
#Tegile IntelliFlassh WEB API

#WEB API for managing Tegile IntelliFlash Arrays.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module IFClient
  class ReplicationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Lists all the replication configurations for the specified project.
    # 
    # @param get_replication_config_list_param 
    # @param [Hash] opts the optional parameters
    # @return [Array<ReplicationConfigV12>]
    def get_replication_config_list_post(get_replication_config_list_param, opts = {})
      data, _status_code, _headers = get_replication_config_list_post_with_http_info(get_replication_config_list_param, opts)
      return data
    end

    # Lists all the replication configurations for the specified project.
    # 
    # @param get_replication_config_list_param 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<ReplicationConfigV12>, Fixnum, Hash)>] Array<ReplicationConfigV12> data, response status code and response headers
    def get_replication_config_list_post_with_http_info(get_replication_config_list_param, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReplicationApi.get_replication_config_list_post ..."
      end
      # verify the required parameter 'get_replication_config_list_param' is set
      if @api_client.config.client_side_validation && get_replication_config_list_param.nil?
        fail ArgumentError, "Missing the required parameter 'get_replication_config_list_param' when calling ReplicationApi.get_replication_config_list_post"
      end
      # resource path
      local_var_path = "/getReplicationConfigList"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(get_replication_config_list_param)
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<ReplicationConfigV12>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReplicationApi#get_replication_config_list_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Gets the replication status for the specified replication configuration.
    # 
    # @param get_replication_status_param 
    # @param [Hash] opts the optional parameters
    # @return [ReplicationStatusV12]
    def get_replication_status_post(get_replication_status_param, opts = {})
      data, _status_code, _headers = get_replication_status_post_with_http_info(get_replication_status_param, opts)
      return data
    end

    # Gets the replication status for the specified replication configuration.
    # 
    # @param get_replication_status_param 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ReplicationStatusV12, Fixnum, Hash)>] ReplicationStatusV12 data, response status code and response headers
    def get_replication_status_post_with_http_info(get_replication_status_param, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReplicationApi.get_replication_status_post ..."
      end
      # verify the required parameter 'get_replication_status_param' is set
      if @api_client.config.client_side_validation && get_replication_status_param.nil?
        fail ArgumentError, "Missing the required parameter 'get_replication_status_param' when calling ReplicationApi.get_replication_status_post"
      end
      # resource path
      local_var_path = "/getReplicationStatus"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(get_replication_status_param)
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ReplicationStatusV12')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReplicationApi#get_replication_status_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Starts a replication for the specified replication configuration.
    # 
    # @param start_replication_param 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def start_replication_post(start_replication_param, opts = {})
      start_replication_post_with_http_info(start_replication_param, opts)
      return nil
    end

    # Starts a replication for the specified replication configuration.
    # 
    # @param start_replication_param 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def start_replication_post_with_http_info(start_replication_param, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReplicationApi.start_replication_post ..."
      end
      # verify the required parameter 'start_replication_param' is set
      if @api_client.config.client_side_validation && start_replication_param.nil?
        fail ArgumentError, "Missing the required parameter 'start_replication_param' when calling ReplicationApi.start_replication_post"
      end
      # resource path
      local_var_path = "/startReplication"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(start_replication_param)
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReplicationApi#start_replication_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
