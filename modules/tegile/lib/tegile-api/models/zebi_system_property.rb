=begin
#Tegile IntelliFlassh WEB API

#WEB API for managing Tegile IntelliFlash Arrays.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'date'

module IFClient
  class ZEBISYSTEMPROPERTY
    # value of the enum 
    attr_accessor :value
    
    ZEBI_APPLIANCE_MODEL = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_APPLIANCE_MODEL"
      u.freeze
    end
    
    ZEBI_APPLIANCE_VERSION = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_APPLIANCE_VERSION"
      u.freeze
    end
    
    ZEBI_GUI_VERSION = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_GUI_VERSION"
      u.freeze
    end
    
    ZEBI_SUPPORTED_TDPS_API_VERSIONS = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_SUPPORTED_TDPS_API_VERSIONS"
      u.freeze
    end
    
    ZEBI_API_MINOR_VERSION = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_API_MINOR_VERSION"
      u.freeze
    end
    
    ZEBI_API_VERSION = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "ZEBI_API_VERSION"
      u.freeze
    end
    
    INTELLIFLASH_ARRAY_GUID = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "INTELLIFLASH_ARRAY_GUID"
      u.freeze
    end
    
    INTELLIFLASH_ARRAY_FQDN = ZEBISYSTEMPROPERTY.new.tap do |u|
      u.value = "INTELLIFLASH_ARRAY_FQDN"
      u.freeze
    end
    
    
    # Builds the enum from value
    # @param [value] The enum value 
    # @return self 
    def build_from_hash(value)
      constValues = ZEBISYSTEMPROPERTY.constants.select{|c| ZEBISYSTEMPROPERTY.const_get(c).value == value}
      raise "Invalid ENUM value #{value} for class #ZEBISYSTEMPROPERTY" if constValues.length != 1
      @value = ZEBISYSTEMPROPERTY.const_get(constValues[0]).value
      self
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class && value == o.value
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [value].hash
    end
    
    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      @value
    end

  end

end
