=begin
#Tegile IntelliFlassh WEB API

#WEB API for managing Tegile IntelliFlash Arrays.

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'date'

module IFClient
  class ErrorCode
    # value of the enum 
    attr_accessor :value
    
    GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_GENERAL"
      u.freeze
    end
    
    INVALID_ARGUMENT = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_ARGUMENT"
      u.freeze
    end
    
    PERMISSION_DENIED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_PERMISSION_DENIED"
      u.freeze
    end
    
    NOMEMORY = ErrorCode.new.tap do |u|
      u.value = "EZEBI_NOMEMORY"
      u.freeze
    end
    
    NOSPACE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_NOSPACE"
      u.freeze
    end
    
    RESOURCE_SUSPENDED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_SUSPENDED"
      u.freeze
    end
    
    RESOURCE_BUSY = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_BUSY"
      u.freeze
    end
    
    RESOURCE_INUSE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_INUSE"
      u.freeze
    end
    
    RESOURCE_EXIST = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_EXIST"
      u.freeze
    end
    
    RESOURCE_CORRUPTED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_CORRUPTED"
      u.freeze
    end
    
    RESOURCE_NOT_FOUND = ErrorCode.new.tap do |u|
      u.value = "EZEBI_RESOURCE_NOT_FOUND"
      u.freeze
    end
    
    REQUEST_EXIST = ErrorCode.new.tap do |u|
      u.value = "EZEBI_REQUEST_EXIST"
      u.freeze
    end
    
    REQUEST_INTERRUPTED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_REQUEST_INTERRUPTED"
      u.freeze
    end
    
    REQUEST_TIMEOUT = ErrorCode.new.tap do |u|
      u.value = "EZEBI_REQUEST_TIMEOUT"
      u.freeze
    end
    
    HOST_UNREACHABLE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_HOST_UNREACHABLE"
      u.freeze
    end
    
    HOST_UNKNOWN = ErrorCode.new.tap do |u|
      u.value = "EZEBI_HOST_UNKNOWN"
      u.freeze
    end
    
    QUIESCE_SUCCEED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_QUIESCE_SUCCEED"
      u.freeze
    end
    
    QUIESCE_SNAPSHOT_RENAME_NEEDED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_QUIESCE_SNAPSHOT_RENAME_NEEDED"
      u.freeze
    end
    
    QUIESCE_FAILED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_QUIESCE_FAILED"
      u.freeze
    end
    
    QUIESCE_PARTIAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_QUIESCE_PARTIAL"
      u.freeze
    end
    
    QUIESCE_NONE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_QUIESCE_NONE"
      u.freeze
    end
    
    POOL_OP_NOT_SUPPORTED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_POOL_OP_NOT_SUPPORTED"
      u.freeze
    end
    
    INVALID_MOUNT_POINT = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_MOUNT_POINT"
      u.freeze
    end
    
    INVALID_WINDOWS_DISPLAY_NAME = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_WINDOWS_DISPLAY_NAME"
      u.freeze
    end
    
    INVALID_INHERITABLE_PROPERTY_FROM_PROJECT = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_INHERITABLE_PROPERTY_FROM_PROJECT"
      u.freeze
    end
    
    INVALID_DATASET_TYPE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_DATASET_TYPE"
      u.freeze
    end
    
    INVALID_COMPRESSION_ALGORITHM = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_COMPRESSION_ALGORITHM"
      u.freeze
    end
    
    INVALID_NUMBER_VALUE_GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_NUMBER_VALUE_GENERAL"
      u.freeze
    end
    
    INVALID_SPACE_METRIC_UNIT = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_SPACE_METRIC_UNIT"
      u.freeze
    end
    
    INVALID_TOGGLE_VALUE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_TOGGLE_VALUE"
      u.freeze
    end
    
    INVALID_COPY_VALUE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_COPY_VALUE"
      u.freeze
    end
    
    INVALID_CACHE_TYPE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_CACHE_TYPE"
      u.freeze
    end
    
    INVALID_LOG_BIAS_TYPE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_LOG_BIAS_TYPE"
      u.freeze
    end
    
    INVALID_SYNC_TYPE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_SYNC_TYPE"
      u.freeze
    end
    
    INVALID_COMPRESSION_LOG_VALUE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_COMPRESSION_LOG_VALUE"
      u.freeze
    end
    
    INVALID_BLOCK_SIZE_VALUE_GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_BLOCK_SIZE_VALUE_GENERAL"
      u.freeze
    end
    
    INVALID_SAN_PROTOCOL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_SAN_PROTOCOL"
      u.freeze
    end
    
    INVALID_PROJECT_PROTOCOL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_PROJECT_PROTOCOL"
      u.freeze
    end
    
    INVALID_NON_READONLY_PROPERTY_GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_NON_READONLY_PROPERTY_GENERAL"
      u.freeze
    end
    
    INVALID_ACL_API_PARAM_GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_ACL_API_PARAM_GENERAL"
      u.freeze
    end
    
    INVALID_SMB_API_PARAM_GENERAL = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_SMB_API_PARAM_GENERAL"
      u.freeze
    end
    
    INVALID_QUOTA_RESERVATION_VALUE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_QUOTA_RESERVATION_VALUE"
      u.freeze
    end
    
    INVALID_DEFAULT_VOLUME_SIZE = ErrorCode.new.tap do |u|
      u.value = "EZEBI_INVALID_DEFAULT_VOLUME_SIZE"
      u.freeze
    end
    
    OPERATION_NOT_ALLOWED = ErrorCode.new.tap do |u|
      u.value = "EZEBI_OPERATION_NOT_ALLOWED"
      u.freeze
    end
    
    
    # Builds the enum from value
    # @param [value] The enum value 
    # @return self 
    def build_from_hash(value)
      constValues = ErrorCode.constants.select{|c| ErrorCode.const_get(c).value == value}
      raise "Invalid ENUM value #{value} for class #ErrorCode" if constValues.length != 1
      @value = ErrorCode.const_get(constValues[0]).value
      self
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class && value == o.value
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [value].hash
    end
    
    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      @value
    end

  end

end
